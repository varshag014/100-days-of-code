Given two integers,  and , find the maximal value of  xor , written , where  and  satisfy the following condition:


For example, if  and , then



Our maximum value is .

Function Description

Complete the maximizingXor function in the editor below. It must return an integer representing the maximum value calculated.

maximizingXor has the following parameter(s):

l: an integer, the lower bound, inclusive
r: an integer, the upper bound, inclusive
Input Format

The first line contains the integer .
The second line contains the integer .

Constraints

3

Output Format

Return the maximal value of the xor operations for all permutations of the integers from  to , inclusive.

Sample Input 0

10
15
Sample Output 0

7
Explanation 0

Here  and . Testing all pairs:






















Two pairs, (10, 13) and (11, 12) have the xor value 7, and this is maximal.

Sample Input 1

11
100
Sample Output 1

127
Contest ends in 2 hours
Submissions: 12
Max Score: 30
Difficulty: Easy
Rate This Challenge:

    
More
 
1
#!/bin/python3
2
​
3
import math
4
import os
5
import random
6
import re
7
import sys
8
​
9
#
10
# Complete the 'maximizingXor' function below.
11
#
12
# The function is expected to return an INTEGER.
13
# The function accepts following parameters:
14
#  1. INTEGER l
15
#  2. INTEGER r
16
#
17
​
18
def maximizingXor(l, r):
19
    # Write your code here
20
    d={0:0}
21
    for i in range(l,r+1):
22
        for j in range(i,r+1):
23
            k=0
24
            k=i^j
25
            d[k]=d.get(k,0)+1
26
    a=max(d.keys())
27
    return a
28
​
29
if __name__ == '__main__':
30
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
31
​
32
    l = int(input().strip())
33
​
34
    r = int(input().strip())
35
​
36
    result = maximizingXor(l, r)
37
​
38
    fptr.write(str(result) + '\n')
39
​
40
    fptr.close()
41
​
